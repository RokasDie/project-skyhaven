<link href="/css/textEditor.css" rel="stylesheet" />
<div class="container">
  <article>
    <div id="post-id" hidden><%=post.id %></div>
    <header>
      <h2>Game: <%= post.game_name %></h2>
      <h2>Author: <%= post.username %></h2>
      <h1><%= post.title %></h1>
      <h6>
        <time
          datetime="<%= post.created %>"
          title="<%= moment(post.created).format('dddd, MMMM Do YYYY') %>"
          ><%= moment(post.created).format("MMMM Do") %></time
        >
      </h6>
      <h3><%= post.subtitle %></h3>
    </header>
    <!-- article body -->
    <div>
      <div id="post-text"><%- post.text %></div>
      <div id="post-edit-buttons"></div>
    </div>
    <div class="vouches">
      Vouches:
      <span
        id="total-vouches"
        class="vouches__number <%- post.vouch ? 'vouches__number--vouched' : null %>"
      >
        <%- !post.total_vouches ? 0 : post.total_vouches %></span
      >
    </div>
    <div id="button-panel">
      <button id="share">Share</button>
      <button id="vouch" onclick="vouchPost(event)">
        Vouch
      </button>
      <% if (typeof user === 'undefined' || user.id !==post.user_id ) {%> <%}
      else { %>
      <button id="edit" onclick="editPost(event)">Edit</button>

      <% } %>
    </div>
    <div class="alert-list"></div>

    <div class="comments-container">
      <div class="comment-write" id="comment-write">
        <form id="comment" onsubmit="submitComment(e)">
          <textarea
            name="comment-text"
            placeholder="Write a comment"
            id="comment-text"
            class="comment-write__input"
          ></textarea>
          <input class="comment-write__submit" type="submit" value="submit" />
        </form>
      </div>
      <div class="comment-tree" id="comment-tree">
        <% comments.forEach((comment)=> { %> <% include ./partials/comment %> <%
        }) %>
      </div>
    </div>
  </article>
  <% if (user === undefined) { %>
  <div id="login-modal" class="login-modal">
    <div id="modal-background" class="login-modal__background">
      <!-- Modal content -->
      <div class="login-modal__content">
        <span class="login-modal__close">&times;</span>
        <p>You need to login</p>
      </div>
    </div>
  </div>
  <% } %>

  <script src="https://cdn.quilljs.com/1.3.7/quill.min.js"></script>
  <!-- May need to return this for performance -->
  <!-- <link href="//cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet" /> -->
  <!-- <script src="https://cdn.commento.io/js/commento.js"></script> -->
  <script src="/javascript/textEditor.js"></script>
  <script type="module">
    import { quillOptions } from "/javascript/quill.js";
    const updateVouchCount = () => {
      const vouchCount = document.getElementById("total-vouches");
    };
    window.vouchPost = async function(e) {
      const hasUserVouched = () => {
        return document
          .getElementById("total-vouches")
          .classList.contains("vouches__number--vouched");
      };
      const removeVouch = () => {
        document
          .getElementById("total-vouches")
          .classList.remove("vouches__number--vouched");
      };

      const addVouch = () => {
        document
          .getElementById("total-vouches")
          .classList.add("vouches__number--vouched");
      };

      const getNumberOfVouches = () => {
        const vouch = document.getElementById("total-vouches").innerText;
        return parseInt(vouch);
      };

      const changeVouchNumber = vouch => {
        const totalVouches = document.getElementById("total-vouches");
        totalVouches.innerText = getNumberOfVouches() + vouch;
      };

      if (hasUserVouched()) {
        removeVouch(), changeVouchNumber(-1);
      } else {
        addVouch(), changeVouchNumber(1);
      }
      const formData = new FormData();
      const postId = document.getElementById("post-id").innerText;
      formData.append("postId", postId);

      const response = await postData("/posts/vouchPost", formData);
      console.log(response.status);
      if (response.status !== 200) {
        removeVouch();
        changeVouchNumber(-1);
        const alertList = document.getElementsByClassName("alert-list")[0];
        createAlert(alertList, response.message, "alert alert--wrong");
      }
    };

    if (
      "logged-out" ===
      document.getElementsByTagName("body")[0].getAttribute("data-user-status")
    ) {
      const loginModal = document.getElementById("login-modal");
      const showModal = event => {
        loginModal.classList.add("login-modal--show");
      };

      document
        .getElementById("comment-write")
        .addEventListener("click", showModal);

      loginModal.onclick = () => {
        loginModal.classList.remove("login-modal--show");
      };
    }

    const submitComment = async e => {
      e.preventDefault();
      const form = document.getElementById("comment");
      const formData = new FormData(form);
      const postId = document.getElementById("post-id").innerText;
      console.log(postId);
      formData.append("postId", postId);
      // const commentText = document.getElementById("comment-text").value;
      for (var pair of formData.entries()) {
        console.log(pair[0] + ", " + pair[1]);
      }
      const response = await postData("/comments/newComment", formData);

      if (response.status === 200) {
        const element = await response.json();
        console.log(element.html);
        const newComment = document.createElement("div");
        newComment.innerHTML = element.html;
        document.getElementById("comment-tree").prepend(newComment);
      } else {
        console.log(response);
        const alertList = document.getElementsByClassName("alert-list")[0];
        createAlert(alertList, response.statusText, "alert alert--wrong");
      }
    };

    const submitEditedPost = async function(e, quill, path) {
      e.preventDefault();
      const formData = new FormData();
      const postId = document.getElementById("post-id").innerText;
      // Populate hidden text form on submit with HTML instead of text
      console.log(quill.root.innerHTML);
      formData.append("postText", quill.root.innerHTML);
      formData.append("postId", postId);
      const alertList = document.getElementsByClassName("alert-list")[0];
      const response = await postData(path, formData);
      const postText = await response.json();
      const postTextEditor = document.getElementById("post-text");
      if (response.status === "error") {
        createAlert(alertList, response.message, "alert");
      } else {
        postTextEditor.innerHTML = "";
        postTextEditor.innerHTML = postText.postText;

        // attach edit button to button panel
        const submitButton = document.getElementById("submit-button");
        submitButton.outerHTML = "";
      }
    };

    window.editPost = function editPost(e) {
      const postEditButtons = document.getElementById("post-edit-buttons");

      const editButton = document.getElementById("edit");
      const form = document.createElement("form");
      const submitButton = document.createElement("input");
      submitButton.setAttribute("type", "submit");
      submitButton.setAttribute("value", "submit");
      submitButton.setAttribute("id", "submit-button");

      postEditButtons.appendChild(submitButton);

      const postText = document.getElementById("post-text");
      const editText = postText.innerHTML;
      console.log(editText);
      postText.innerHTML = "";

      const editorDiv = document.createElement("div");
      editorDiv.id = "editor";
      postText.appendChild(editorDiv);
      const quill = new Quill("#editor", quillOptions);
      quill.clipboard.dangerouslyPasteHTML(editText);
      submitButton.addEventListener("click", function(e) {
        // This function comes from textEditor.js file, to submit the updated post
        submitEditedPost(e, quill, "/posts/updatePost");
      });
    };
  </script>
</div>
