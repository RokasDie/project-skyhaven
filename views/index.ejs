<div class="main-page">
  <div class="feed">
    <div class="feed-selector">
      <!-- REIKIA PADARYTI KAD NORMALIAI VEIKT UFEED SELECTOR -->
      <div class="feed-selector__item">
        <a href="/topPosts" class="feed-selector__item-link">Top</a>
      </div>
      <div class="feed-selector__item">
        <a class="feed-selector__item-link" href="/latestPosts">Latest</a>
      </div>
    </div>
    <div class="post-list">
      <% posts.forEach( function(post) { %>
      <div class="post-list-item">
        <a
          class="post-list-item__link"
          href="/posts/read/<%= post.slug%>/<%= post.post_id%>"
        >
          <img
            class="post-list-item__image"
            src="https://ik.imagekit.io/0xnsagmlp/<%=post.post_cover_picture %>?tr=h-150%2Cw-178"
            alt=""
          />
        </a>

        <div>
          <a
            class="post-list-item__link"
            href="/posts/read/<%= post.slug%>/<%= post.post_id%>"
          >
            <div class="post-list-item__game"><%= post.game_name %></div>
            <h1 class="post-list-item__title"><%= post.title %></h1>
            <h3 class="post-list-item__subtitle">
              <%= post.subtitle %>
            </h3>
          </a>
          <div class="post-list-item__post-details">
            <div class="post-list-item__writer-prefix">By</div>
            <a class="post-list-item__writer-name"> <%= post.username %></a
            >ãƒ»<time
              class="post-list-item__date"
              datetime="<%= post.created %>"
              title="<%= moment(post.created).format('dddd, MMMM Do YYYY') %>"
            >
              <%= moment(post.created).format("MMMM Do") %>
            </time>
          </div>
          <div class="post-list-item__vouches">
            Vouches:
            <!-- Need to make dynamic from the database -->
            <div class="post-list-item__vouch-number">
              <%= post.vouches_total ? post.vouches_total : 0 %>
            </div>
          </div>
        </div>
      </div>

      <div class="post-list-item__separator"></div>
      <% }) %>
    </div>
    <hr />
  </div>
  <div class="interest-panel">
    <div class="interests interest-panel__interests">
      <div class="interests__title">Follow games</div>
      <div class="interests__list" id="user-not-followed-games">
        <% games.forEach(function(game) { %>
        <a onclick="followGame(event)" class="interests__item" href="#"
          ><span data-id="<%= game.id %>" class="interests__item-text"
            ><%= game.name %></span
          ></a
        >
        <%}) %>
      </div>
    </div>
    <% if (typeof user !== 'undefined') { %>
    <div class="interests interest-panel__interests">
      <div class="interests__title">Your followed games</div>
      <div class="interests__list" id="user-followed-games">
        <% followedGames.forEach(function(game) { %>
        <a onclick="unfollowGame(event)" class="interests__item" href="#"
          ><span data-id="<%= game.id %>" class="interests__item-text"
            ><%= game.name %></span
          ></a
        >
        <%}) %>
      </div>
      <div class="interests__all-list"><a href="/allGames">All games</a></div>
    </div>
    <%} %>
  </div>
</div>
<script src="/javascript/textEditor.js"></script>
<script>
  const followGame = async event => {
    const form = new FormData();
    // Highlight targeted element
    event.target.classList.add("interests__item-text--follow-processing");
    // Need to disable clicking other items until approval comes form server
    form.append("gameId", event.target.dataset.id);
    form.append("gameName", event.target.innerText);

    const response = await postData("/toggleGameFollow", form);
    const results = await response.json();
    if (response.status === 200 && results.followToggle == 1) {
      console.log(results);
      // remove the game and add it to the followed games list bottom
      event.target.remove();
      // Chaining doesnt work need to figure out something
      const followedGameSpan = document.createElement("span"),
        followedGameLink = document.createElement("a");

      followedGameSpan.classList.add("interests__item-text");
      followedGameSpan.setAttribute("data-id", results.gameId);
      followedGameSpan.innerText = results.gameName;

      followedGameLink.classList.add("interests__item");
      followedGameLink.setAttribute("onclick", "unfollowGame(event)");
      followedGameLink.setAttribute("href", "#");

      followedGameLink.appendChild(followedGameSpan);
      const followedGamesElement = document.getElementById(
        "user-followed-games"
      );
      followedGamesElement.appendChild(followedGameLink);
    } else {
      // Remove the follow process css class
      event.target.classList.remove("interests__item-text--follow-processing");
    }
  };

  const unfollowGame = async event => {
    const form = new FormData();
    event.target.classList.add("interests__item-text--follow-processing");
    form.append("gameId", event.target.dataset.id);
    form.append("gameName", event.target.innerText);
    const response = await postData("/toggleGameFollow", form);
    const results = await response.json();
    if (response.status === 200 && results.followToggle == 0) {
      console.log(results);
      // remove the game and add it to the followed games list bottom
      event.target.remove();
      // Chaining doesnt work need to figure out something
      const followedGameSpan = document.createElement("span"),
        followedGameLink = document.createElement("a");

      followedGameSpan.classList.add("interests__item-text");
      followedGameSpan.setAttribute("data-id", results.gameId);
      followedGameSpan.innerText = results.gameName;

      followedGameLink.classList.add("interests__item");
      followedGameLink.setAttribute("onclick", "followGame(event)");
      followedGameLink.setAttribute("href", "#");

      followedGameLink.appendChild(followedGameSpan);
      const followedGamesElement = document.getElementById(
        "user-not-followed-games"
      );
      followedGamesElement.appendChild(followedGameLink);
    } else {
      // Remove the follow process css class
      event.target.classList.remove("interests__item-text--follow-processing");
    }
  };
</script>
